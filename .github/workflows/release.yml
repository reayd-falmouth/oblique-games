name: Build and Release to Itch.io

env:
  ITCHIO_USER: reayd-falmouth
  
on:
  workflow_dispatch:
    inputs:
      game_name:
        description: "Name of the game (used in executable name and artifacts)"
        required: true
  push:
    tags:
      - '*'  # Runs on any tag push

jobs:
  build-windows:
    name: Build Windows Executable
    runs-on: windows-latest
    env:
      GAME_NAME: ${{ github.event.inputs.game_name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          pip install -r src/oblique_games/requirements.txt
          pip install pyinstaller pillow

      - name: Build Windows Executable
        run: |
          cd src/oblique_games
          pyinstaller --onefile --windowed --name ${{ env.GAME_NAME }} --icon=assets/img/icon/icon_64x64.png --add-data "assets;assets" main.py

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.GAME_NAME }}-windows
          path: src/oblique_games/dist/${{ env.GAME_NAME }}.exe

  build-linux:
    name: Build Linux Executable
    runs-on: ubuntu-latest
    env:
      GAME_NAME: ${{ github.event.inputs.game_name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          pip install -r src/oblique_games/requirements.txt
          pip install pyinstaller pillow

      - name: Build Linux Executable
        run: |
          cd src/oblique_games
          pyinstaller --onefile --windowed --name ${{ env.GAME_NAME }} --icon=assets/img/icon/icon_64x64.png --add-data "assets:assets" main.py

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.GAME_NAME }}-linux
          path: src/oblique_games/dist/${{ github.event.inputs.game_name }}

  build-mac-arm64:
    name: Build macOS (Apple Silicon)
    runs-on: macos-14  # Runs on Apple Silicon (arm64)
    env:
      GAME_NAME: ${{ github.event.inputs.game_name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          arch -arm64 pip install -r src/oblique_games/requirements.txt
          arch -arm64 pip install pyinstaller pillow

      - name: Build macOS ARM64 Executable
        run: |
          cd src/oblique_games
          arch -arm64 pyinstaller --onefile --windowed --name ${{ env.GAME_NAME }}-arm64 --icon=assets/img/icon/icon_64x64.png --add-data "assets:assets" main.py

      - name: Upload macOS ARM64 Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.GAME_NAME }}-mac-arm64
          path: src/oblique_games/dist/${{ env.GAME_NAME }}-arm64

  build-mac-x86_64:
    name: Build macOS (Intel)
    runs-on: macos-13  # Runs on Intel Macs (x86_64)
    env:
      GAME_NAME: ${{ github.event.inputs.game_name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          arch -x86_64 pip install -r src/oblique_games/requirements.txt
          arch -x86_64 pip install pyinstaller pillow

      - name: Build macOS x86_64 Executable
        run: |
          cd src/oblique_games
          arch -x86_64 pyinstaller --onefile --windowed --name ${{ env.GAME_NAME }}-x86_64 --icon=assets/img/icon/icon_64x64.png --add-data "assets:assets" main.py

      - name: Upload macOS x86_64 Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.GAME_NAME }}-mac-x86_64
          path: src/oblique_games/dist/${{ env.GAME_NAME }}-x86_64

  release:
    name: Release to Itch.io
    needs: [build-windows, build-linux, build-mac-arm64, build-mac-x86_64]
    runs-on: ubuntu-latest
    env:
      GAME_NAME: ${{ github.event.inputs.game_name }}
    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.GAME_NAME }}-windows
          path: build/windows

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.GAME_NAME }}-linux
          path: build/linux

      - name: Download macOS ARM64 Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.GAME_NAME }}-mac-arm64
          path: build/mac-arm64

      - name: Download macOS x86_64 Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.GAME_NAME }}-mac-x86_64
          path: build/mac-x86_64

      - name: Deploy Windows Build to Itch.io
        uses: robpc/itchio-upload-action@v1
        with:
          path: build/windows/${{ env.GAME_NAME }}.exe
          project: ${{ env.ITCHIO_USER }}/${{ env.GAME_NAME }}
          channel: windows
          version: ${{ github.ref_name }}
          api-key: ${{ secrets.ITCHIO_API_KEY }}

      - name: Deploy Linux Build to Itch.io
        uses: robpc/itchio-upload-action@v1
        with:
          path: build/linux/${{ env.GAME_NAME }}
          project: ${{ env.ITCHIO_USER }}/${{ env.GAME_NAME }}
          channel: linux
          version: ${{ github.ref_name }}
          api-key: ${{ secrets.ITCHIO_API_KEY }}

      - name: Deploy macOS ARM64 Build to Itch.io
        uses: robpc/itchio-upload-action@v1
        with:
          path: build/mac-arm64/${{ env.GAME_NAME }}-arm64
          project: ${{ env.ITCHIO_USER }}/${{ env.GAME_NAME }}
          channel: mac
          version: ${{ github.ref_name }}
          api-key: ${{ secrets.ITCHIO_API_KEY }}

      - name: Deploy macOS x86_64 Build to Itch.io
        uses: robpc/itchio-upload-action@v1
        with:
          path: build/mac-x86_64/${{ env.GAME_NAME }}-x86_64
          project: ${{ env.ITCHIO_USER }}/${{ env.GAME_NAME }}
          channel: mac
          version: ${{ github.ref_name }}
          api-key: ${{ secrets.ITCHIO_API_KEY }}
